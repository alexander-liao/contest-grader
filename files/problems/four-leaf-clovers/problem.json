{
    "id": "four-leaf-clovers",
    "genr_precommand": "",
    "desc": "Patrick was walking through a field when he saw a four leaf clover! Looking around, he wondered how many more four-leaf clovers there were in the field. Your task is to help him count the number of four-leaf clovers in the field!",
    "tags": [
        "easy",
        "grid",
        "pattern-2D",
        "counting"
    ],
    "genr": "import random\n\nN = random.randint(3, [10, 100, 500][int(input())])\n\nprint(N)\n\ngrid = [[random.choice(\".LS\") for _ in range(N)] for _ in range(N)]\n\nfor _ in range(random.randint(N, max(N, N ** 2 // 4))):\n    x = random.randint(1, N - 2)\n    y = random.randint(1, N - 2)\n    grid[x][y] = \"S\"\n    grid[x - 1][y] = grid[x + 1][y] = grid[x][y - 1] = grid[x][y + 1] = \"L\"\n\nprint(\"\\n\".join(map(\"\".join, grid)))",
    "impl_postcommand": "",
    "tcc": "20",
    "smpl": "3<br />.L.<br />LSL<br />.L.\n1\n4<br />.L..<br />LSL.<br />.LSL<br />..L.\n2",
    "outp": "The output will consist of a single integer, the number of four-leaf clovers in the field. A four-leaf clover is defined as a stem with exactly four adjacent leaves. Two squares are adjacent if they share an edge.",
    "genr_filename": "genr.py",
    "impl_precommand": "",
    "subt": "For 10 of the available 100 marks, <code>N &le; 10</code>.\nFor an additional 20 marks, <code>N &le; 100</code>.\nFor the remaining 70 marks, <code>N &le; 500</code>.",
    "impl_command": "python3 impl.py",
    "genr_postcommand": "",
    "inpt": "The first line will contain a single integer N.\nN lines will follow, each containing N characters which are either <code>.</code>, <code>L</code>, or <code>S</code>, with those representing grass, a leaf, or a stem, respectively.",
    "genr_command": "python3 genr.py",
    "title": "2018-03-21--P2: Four Leaf Clovers!",
    "impl": "N = int(input())\n\ncount = 0\n\ngrid = [input() for _ in range(N)]\n\nfor x in range(1, N - 1):\n    for y in range(1, N - 1):\n        if grid[x][y] == \"S\" and grid[x - 1][y] == grid[x + 1][y] == grid[x][y - 1] == grid[x][y + 1] == \"L\":\n            count += 1\n\nprint(count)",
    "pts": "10/20/70",
    "impl_filename": "impl.py",
    "tls": "5"
}